--[[
    SCRIPT DE DESEMPEÑO TOTAL PARA ROBLOX
    --------------------------------------
    - Limita los FPS a 30 (si setfpscap está disponible).
    - Muestra contadores de FPS y Ping en la esquina superior izquierda con colores dinámicos:
         • FPS: 1-10 (rojo), 10-30 (amarillo), 30-40 (verde) y 40-60 (azul).
         • Ping: 0-160 (azul), 160-200 (verde), 200-300 (amarillo) y 300+ (rojo).
    - Optimiza modelos y efectos "pixelándolos" sin alterar su tamaño original:
         • Forzar material Plastic en BaseParts, MeshParts y SpecialMesh (preservando la escala original).
         • Quitar texturas en MeshParts y ocultar Decals.
         • Desactivar ParticleEmitters, Fire, Smoke y reducir sombras en luces.
         • Mantener el audio intacto.
    - Se aplica un culling por distancia: usando fog y modificando la visibilidad local (LocalTransparencyModifier)
      de los objetos en el Workspace según la distancia del LocalPlayer (más de 150 studs se ocultan).
    - Se reevalúan continuamente las optimizaciones para objetos nuevos, en Workspace y Lighting.
--]]

------------------------------
-- CONFIGURACIÓN PRINCIPAL
------------------------------
local Settings = {
    AntiLag = true,
    PingOptimizer = true,
    RenderMode = "UltraLow",       -- Opciones: "UltraLow", "Low", "Medium"
    RenderDistance = 150,            -- Distancia en studs para culling de objetos
    PostProcessing = {
        Enabled = false,           -- Desactivado para máximo desempeño
        BlurIntensity = 0,
        BasicEffects = false
    },
    DynamicReapplyInterval = 5       -- Intervalo (en segundos) para reoptimizar objetos nuevos
}

------------------------------
-- SERVICIOS
------------------------------
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")
local StarterGui = game:GetService("StarterGui")
local Stats = game:GetService("Stats")
local LocalPlayer = Players.LocalPlayer
local Workspace = game:GetService("Workspace")
local Terrain = Workspace:FindFirstChildOfClass("Terrain")

------------------------------
-- LIMITADOR DE FPS
------------------------------
local FPS_LIMIT = 60
if setfpscap then
    setfpscap(FPS_LIMIT)
    print("FPS limitados a " .. FPS_LIMIT)
else
    print("Función 'setfpscap' no disponible. No se pudo limitar los FPS.")
end

------------------------------
-- MENSAJES EN CHAT
------------------------------
local function ShowMessage(text, color)
    StarterGui:SetCore("ChatMakeSystemMessage", {
        Text = "⚡ " .. text,
        Color = color,
        Font = Enum.Font.SourceSansBold,
        TextSize = 15
    })
end

------------------------------
-- FUNCIONES DE OPTIMIZACIÓN DE OBJETOS
------------------------------
local function OptimizeObject(obj)
    pcall(function()
        -- Para BaseParts: forzar material Plastic sin alterar tamaño
        if obj:IsA("BasePart") then
            obj.Material = Enum.Material.Plastic
            obj.Reflectance = 0
            obj.CastShadow = false
        end

        -- Para MeshParts: forzar material Plastic y quitar textura sin modificar tamaño
        if obj:IsA("MeshPart") then
            obj.Material = Enum.Material.Plastic
            obj.TextureID = ""  -- Quita la textura para apariencia más "pixelada"
            obj.CastShadow = false
        end

        -- Para SpecialMesh: forzar malla simple y preservar la escala original
        if obj:IsA("SpecialMesh") then
            obj.MeshType = Enum.MeshType.FileMesh  -- Forzar malla simple
            if not obj:GetAttribute("OriginalScale") then
                obj:SetAttribute("OriginalScale", obj.Scale)
            end
            obj.Scale = obj:GetAttribute("OriginalScale")  -- Se preserva el tamaño original
        end

        -- Para Decals: ocultar la textura
        if obj:IsA("Decal") then
            obj.Transparency = 1
        end

        -- Desactivar efectos costosos
        if obj:IsA("ParticleEmitter") then
            obj.Rate = 0
        end
        if obj:IsA("Fire") or obj:IsA("Smoke") then
            obj.Enabled = false
        end

        -- Optimización para luces: sin sombras y brillo reducido
        if obj:IsA("Light") then
            obj.Shadows = false
            obj.Brightness = obj.Brightness * 0.5
        end

        -- Se mantiene el audio intacto

        -- Para explosiones: reducir efectos físicos y visuales
        if obj:IsA("Explosion") then
            obj.BlastRadius = 0
            obj.BlastPressure = 0
        end
    end)
end

-- Recorre contenedores (Workspace y Lighting) para optimizar objetos
local function OptimizeAllObjects()
    local containers = {Workspace, Lighting}
    for _, container in ipairs(containers) do
        for _, obj in ipairs(container:GetDescendants()) do
            if not obj:IsDescendantOf(LocalPlayer.Character) then
                OptimizeObject(obj)
            end
        end
    end
end

-- Conecta optimización dinámica para nuevos objetos
local function ConnectDynamicOptimization()
    for _, container in ipairs({Workspace, Lighting}) do
        container.DescendantAdded:Connect(function(child)
            if not child:IsDescendantOf(LocalPlayer.Character) then
                OptimizeObject(child)
            end
        end)
    end
end

------------------------------
-- OPTIMIZACIÓN DE RENDER Y POST-PROCESADO
------------------------------
local function OptimizeRender()
    pcall(function()
        Lighting.GlobalShadows = false
        Lighting.Technology = Enum.Technology.Compatibility

        -- Configurar fog para limitar renderizado a RenderDistance studs
        Lighting.FogStart = 0
        Lighting.FogEnd = Settings.RenderDistance
        Lighting.FogColor = Color3.new(0.05, 0.05, 0.05)  -- Color oscuro

        if Settings.RenderMode == "UltraLow" then
            settings().Rendering.QualityLevel = 0
            Lighting.ClockTime = 12
            Lighting.Outlines = false
            if Terrain then
                Terrain.Decoration = false
                Terrain.WaterWaveSize = 0
            end
        elseif Settings.RenderMode == "Low" then
            settings().Rendering.QualityLevel = 1
            Lighting.ClockTime = 12
            Lighting.Outlines = true
            if Terrain then
                Terrain.Decoration = false
                Terrain.WaterWaveSize = 1
            end
        else -- Medium
            settings().Rendering.QualityLevel = 2
            Lighting.ClockTime = 12
            Lighting.Outlines = true
            if Terrain then
                Terrain.Decoration = true
                Terrain.WaterWaveSize = 2
            end
        end

        ShowMessage("Render mode: " .. Settings.RenderMode, Color3.new(0.8, 0, 1))
    end)
end

local function SetupPostProcessing()
    if not Settings.PostProcessing.Enabled then return end
    pcall(function()
        local PostProcess = Lighting
        for _, effectName in ipairs({"SunRays", "ColorCorrection", "DepthOfField"}) do
            local effect = PostProcess:FindFirstChild(effectName)
            if effect then effect.Enabled = false end
        end
        ShowMessage("Post-Procesado: Desactivado", Color3.new(1, 0.8, 0))
    end)
end

------------------------------
-- CULLING POR DISTANCIA (VISIBILIDAD LOCAL)
------------------------------
local function CullObjectsByDistance()
    while true do
        local playerPos
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            playerPos = LocalPlayer.Character.HumanoidRootPart.Position
        else
            playerPos = Workspace.CurrentCamera.CFrame.Position
        end

        for _, obj in ipairs(Workspace:GetDescendants()) do
            if obj:IsA("BasePart") and not obj:IsDescendantOf(LocalPlayer.Character) then
                local distance = (playerPos - obj.Position).Magnitude
                if distance > Settings.RenderDistance then
                    obj.LocalTransparencyModifier = 1  -- Oculto si está fuera del rango
                else
                    obj.LocalTransparencyModifier = 0  -- Visible si está dentro
                end
            end
        end
        task.wait(0.5)
    end
end

------------------------------
-- CONTADOR DE RENDIMIENTO (FPS y PING) CON COLORES DINÁMICOS
------------------------------
local function CreatePerformanceCounter()
    local playerGui = LocalPlayer:WaitForChild("PlayerGui")
    
    local screenGui = Instance.new("ScreenGui")
    screenGui.Name = "PerformanceStats"
    screenGui.ResetOnSpawn = false
    screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    screenGui.Parent = playerGui

    local function CreateStatLabel(name, posY)
        local label = Instance.new("TextLabel")
        label.Name = name
        label.Size = UDim2.new(0, 180, 0, 28)
        label.Position = UDim2.new(0, 10, 0, posY)
        label.AnchorPoint = Vector2.new(0, 0)
        label.BackgroundTransparency = 1
        label.BackgroundColor3 = Color3.new(0, 0, 0)
        label.Font = Enum.Font.SourceSansSemibold
        label.TextSize = 10
        label.TextStrokeTransparency = 0
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = screenGui
        return label
    end

    local fpsLabel = CreateStatLabel("FPSLabel", 10)
    local pingLabel = CreateStatLabel("PingLabel", 45)
    
    local frameTimes = {}
    local lastUpdate = time()

    RunService.Heartbeat:Connect(function(deltaTime)
        table.insert(frameTimes, deltaTime)
        if #frameTimes > 10 then table.remove(frameTimes, 1) end
        
        local currentTime = time()
        if currentTime - lastUpdate >= 0.2 then
            local total = 0
            for _, t in ipairs(frameTimes) do
                total = total + t
            end
            local avgFrameTime = total / #frameTimes
            local avgFPS = math.floor(1 / avgFrameTime)
            local rawFrameMs = avgFrameTime * 1000
            local frameMs = math.floor(math.clamp(rawFrameMs, 1, 20))
            
            local ping = "Cargando..."
            pcall(function()
                ping = math.floor(Stats.Network.ServerStatsItem["Data Ping"]:GetValue())
            end)

            -- Asignar color según el FPS
            local fpsColor
            if avgFPS <= 10 then
                fpsColor = Color3.new(1, 0, 0)      -- Rojo
            elseif avgFPS <= 30 then
                fpsColor = Color3.new(1, 1, 0)      -- Amarillo
            elseif avgFPS <= 40 then
                fpsColor = Color3.new(0, 1, 0)      -- Verde
            else
                fpsColor = Color3.new(0, 0, 1)      -- Azul
            end

            -- Asignar color según el Ping
            local pingColor
            if ping <= 160 then
                pingColor = Color3.new(0, 0, 1)     -- Azul
            elseif ping <= 200 then
                pingColor = Color3.new(0, 1, 0)     -- Verde
            elseif ping <= 300 then
                pingColor = Color3.new(1, 1, 0)     -- Amarillo
            else
                pingColor = Color3.new(1, 0, 0)     -- Rojo
            end

            fpsLabel.Text = string.format("FPS: %d (%.1f ms)", avgFPS, frameMs)
            fpsLabel.TextColor3 = fpsColor

            pingLabel.Text = string.format("Ping: %d ms", ping)
            pingLabel.TextColor3 = pingColor

            lastUpdate = currentTime
        end
    end)
end

------------------------------
-- OPTIMIZACIÓN DE PING
------------------------------
local function OptimizePing()
    if not Settings.PingOptimizer then return end
    pcall(function()
        local ReplicatedStorage = game:GetService("ReplicatedStorage")
        ReplicatedStorage:SetOutgoingKBPSLimit(99999)
        game:GetService("NetworkSettings").PhysicsSend = 1/60
        ShowMessage("Ping optimizado", Color3.new(0, 1, 0.5))
    end)
end

------------------------------
-- BUCLE DE REAPLICACIÓN CONTINUA DE OPTIMIZACIONES
------------------------------
task.spawn(function()
    while true do
        OptimizeAllObjects()
        task.wait(Settings.DynamicReapplyInterval)
    end
end)
ConnectDynamicOptimization()

------------------------------
-- INICIALIZACIÓN PRINCIPAL
------------------------------
local function Main()
    ShowMessage("Iniciando optimizaciones de desempeño...", Color3.new(1, 1, 0))
    
    OptimizeAllObjects()
    OptimizePing()
    OptimizeRender()
    SetupPostProcessing()
    CreatePerformanceCounter()
    
    -- Iniciar culling por distancia en paralelo
    task.spawn(CullObjectsByDistance)
    
    task.delay(1, function()
        local physicsFPS = math.floor(Workspace:GetRealPhysicsFPS())
        ShowMessage("Sistema listo! FPS: " .. physicsFPS, Color3.new(0, 1, 0))
    end)
end

task.wait(1)
Main()
